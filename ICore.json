{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_WNAD",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_vault",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "WNAD",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buy",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "fee",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyAmountOutMin",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountOutMin",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "fee",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyExactAmountOut",
      "inputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountInMax",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createCurve",
      "inputs": [
        {
          "name": "creator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "symbol",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "tokenURI",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "fee",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "curve",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "virtualNad",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "virtualToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "factory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAmountIn",
      "inputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "k",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getAmountOut",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "k",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getCurveData",
      "inputs": [
        {
          "name": "_factory",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "curve",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "virtualNad",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "virtualToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "k",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurveData",
      "inputs": [
        {
          "name": "curve",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "virtualNad",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "virtualToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "k",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeeVault",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_factory",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sell",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sellAmountOutMin",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountOutMin",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sellAmountOutMinWithPermit",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountOutMin",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sellExactAmountOut",
      "inputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountInMax",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellExactAmountOutwithPermit",
      "inputs": [
        {
          "name": "amountOut",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountInMax",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellPermit",
      "inputs": [
        {
          "name": "amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "vault",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC4626"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x60c034620000e057601f620027c938819003918201601f19168301916001600160401b03831184841017620000e5578084926040948552833981010312620000e0576200005a60206200005283620000fb565b9201620000fb565b6000805460ff60a01b191690556080919091526001600160a01b031660a0526040516126b890816200011182396080518181816027015281816103080152818161093801528181610d4e01528181610e6b0152818161105f015281816114430152818161162301528181611c3f0152611fa2015260a0518181816104a80152611f7f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000e05756fe60406080815260049081361015610064575b50361561001d57600080fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361004f57005b600190634e487b7160e01b6000525260246000fd5b90600091823560e01c806302a579151461178457806319a5049f14611527578381632a7f6367146112935750806334d8f7071461113b5780633bd7042d14610fb4578063526cc7a714610db757806352707d8c14610d98578063571fd01214610d72578063577898da14610d2e57806361babc7614610c58578063663a313e14610b1c578063849f72ce1461086a578063c45a015514610844578063c4d66de814610772578063e548cedd14610513578063ec0f7cf014610488578063f98355e4146104d0578063fbfa77cf146104885763feb2003014610146575090610011565b3461048457610171836101583661196c565b6101689894989793969197611fc7565b90421115611a68565b8151636eb1769f60e11b815233848201908152306020828101919091526001600160a01b039384169792909182908290819060400103818b5afa90811561044157879161044b575b506101cf908a6101c761211d565b911015611a68565b6101e26101da612000565b8a1515611a68565b6101ee8930338a61258e565b602481848854168651928380926361f029fb60e01b82528c8b8301525afa918215610441578792610407575b505061023761022882612300565b61023184612392565b8c61217c565b96838216928551632fdde06960e11b815286818981885afa9081156103fd576102aa949261028d6102959e95938d8d6102a5958d82946103bd575b505061ffff9160ff610285921690611b08565b911690611e83565b9d8e8d611b1b565b101561029f61205f565b90611a68565b612454565b803b1561039b5784866102e99289838751809681958294636c197ff560e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b35790859161039f575b505061030687611f70565b7f000000000000000000000000000000000000000000000000000000000000000016916103338786611b1b565b833b1561039b57602485928385519687948593632e1a7d4d60e01b85528401525af1908115610392575061037a575b50506103779261037191611b1b565b90612532565b80f35b61038390611885565b61038e578338610362565b8380fd5b513d84823e3d90fd5b8480fd5b6103a890611885565b61038e5783386102fb565b83513d87823e3d90fd5b60ff9450610285925061ffff9391816103ea92903d106103f6575b6103e281836118e7565b810190611e57565b9490925050918d610272565b503d6103d8565b87513d8b823e3d90fd5b90809250813d831161043a575b61041e81836118e7565b810103126104365761042f90611af4565b388061021a565b8580fd5b503d610414565b85513d89823e3d90fd5b809750828092503d831161047d575b61046481836118e7565b81010312610478576101cf8a9651906101b9565b600080fd5b503d61045a565b8280fd5b8382346104cc57816003193601126104cc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b8382346104cc5760203660031901126104cc576060906105036104f161182d565b916104fb83612300565b929093612392565b9181519384526020840152820152f35b503461048457608036600319011261048457813583610530611843565b93610539611859565b93610550610545611fc7565b426064351015611a68565b8051636eb1769f60e11b815233838201908152306020828101919091526001600160a01b03989092908916918390829081906040010381855afa9081156106c757869161073e575b506105a690876101c761211d565b6105b96105b1612000565b871515611a68565b6105c58630338461258e565b602482898754168551928380926361f029fb60e01b8252868a8301525afa9283156106c7578693610706575b505061060e6105ff83612300565b61060885612392565b8961217c565b9588831690845193632fdde06960e11b855285858881865afa9384156106fc57889589956106d1575b50906106439291612454565b803b15610436578587610682928a838851809681958294636c197ff560e01b84528d8401602090939291936001600160a01b0360408201951681520152565b03925af180156106c7579086916106b3575b505061ffff61028560ff6106a9941688611b08565b9561030687611f70565b6106bc90611885565b61039b578438610694565b84513d88823e3d90fd5b610643939296506106f0919550873d89116103f6576103e281836118e7565b95909594909192610637565b86513d8a823e3d90fd5b9080929350813d8311610737575b61071e81836118e7565b8101031261039b5761072f90611af4565b9038806105f1565b503d610714565b809650838092503d831161076b575b61075781836118e7565b81010312610478576105a689955190610598565b503d61074d565b8382346104cc5760203660031901126104cc5774010000000000000000000000000000000000000000907fffffffffffffffffffffff0000000000000000000000000000000000000000006001600160a01b036107cd61182d565b61083a8654947f5a45440000000000000000000000000000000000000000000000000000000000815191610800836118af565b602383527f436f7265203a204552525f434f52455f414c52454144595f494e495449414c49602084015282015260ff8660a01c1615611a68565b1691161717815580f35b8382346104cc57816003193601126104cc576001600160a01b0360209254169051908152f35b5090826108886108793661196c565b61016898949793959198611fc7565b8251636eb1769f60e11b815233838201908152306020828101919091526001600160a01b03939092908416918390829081906040010381855afa9081156106fc578891610aea575b5086111580610ae1575b6108e69061029f61211d565b602482848954168751928380926361f029fb60e01b8252868a8301525afa9283156106fc578893610aa5575b505061091d82612300565b96909161092984612392565b97610935348c87611edc565b857f00000000000000000000000000000000000000000000000000000000000000001698893b15610a97578851630d0e30db60e41b81528b818a81348f5af18015610a9b578c88959493928f92610a79575b5050956109b6926109a4926109c29861099f34611f70565b61226a565b936109ad6120be565b90851115611a68565b6102a58330338461258e565b16803b1561039b578486610a029289838751809681958294636c197ff560e01b84528a8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b357908591610a65575b5050823b1561038e5784602485928385519687948593632e1a7d4d60e01b85528401525af19081156103925750610a51575b505061037791612532565b610a5a90611885565b610484578238610a46565b610a6e90611885565b61038e578338610a14565b9092979550610a889150611885565b610a97578592948c8c38610987565b8a80fd5b8a513d8e823e3d90fd5b9080929350813d8311610ada575b610abd81836118e7565b81010312610ad657610ace90611af4565b903880610912565b8680fd5b503d610ab3565b508515156108da565b809850838092503d8311610b15575b610b0381836118e7565b8101031261047857858a9751906108d0565b503d610af9565b509082610b28366119a9565b92939a9697999594610b47610b3e939293611fc7565b42871015611a68565b6001600160a01b0380961694853b15610a9757885163d505accf60e01b81526001600160a01b03909216828901908152306020820152604081018b9052606081019190915260ff909216608083015260a082019290925260c08101929092529087908290819060e001038183865af1801561044157908791610c44575b5050602490610bd46105b16120be565b6020838854168651938480926361f029fb60e01b825285898301525afa918215610441578792610c09575b5061091d82612300565b9091506020813d8211610c3c575b81610c24602093836118e7565b81010312610ad657610c3590611af4565b9038610bff565b3d9150610c17565b610c4d90611885565b610436578538610bc4565b509190346104cc57826003193601126104cc57610c7361182d565b926020610c7e611843565b9460248351809781936361f029fb60e01b83526001600160a01b03978880931690840152165afa928315610d23578093610ce2575b5060809350610cc183612300565b9190610ccc85612392565b9382519516855260208501528301526060820152f35b9092506020843d8211610d1b575b81610cfd602093836118e7565b81010312610d185750610d11608093611af4565b9138610cb3565b80fd5b3d9150610cf0565b9051903d90823e3d90fd5b8382346104cc57816003193601126104cc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b8382346104cc57602090610d91610d8836611a0a565b9291909161226a565b9051908152f35b8382346104cc57602090610d91610dae36611a0a565b9291909161217c565b50610dd783610dc53661196c565b61016898949298979397969196611fc7565b610def610de48783611a98565b34101561029f611abb565b610e02610dfa612000565b821515611a68565b610e0d6105b1611ea3565b6001600160a01b0380916020828754169960248651809581936361f029fb60e01b8352169c8d8a8301525afa9182156106c7578692610f79575b50610e5182612300565b610e5d84939293612392565b610e688b8487611edc565b857f0000000000000000000000000000000000000000000000000000000000000000169a610e968185611a98565b8c3b15610a97578a8d8b8b5180948193630d0e30db60e41b83525af18015610f6f5787949392918c91610f4e575b505094610ede9291610ed8610ee497611f70565b8561217c565b99612454565b16803b1561038e57815163cce7ec1360e01b81526001600160a01b0386169381019384526020840187905292849184918290849082906040015b03925af19081156103925750610f3a575b505061037792612454565b610f4390611885565b61038e578338610f2f565b610f5c919294939550611885565b610f6b57909185928a38610ec4565b8980fd5b89513d8d823e3d90fd5b9091506020813d8211610fac575b81610f94602093836118e7565b8101031261043657610fa590611af4565b9038610e47565b3d9150610f87565b5060c036600319011261048457604435908235610fcf61186f565b93608435926001600160a01b03808516850361047857808894610ffe610ff3611fc7565b4260a4351015611a68565b61100b610de48983611a98565b6020828754169960248651809581936361f029fb60e01b8352169c8d8a8301525afa9182156106c7578692611100575b5061104582612300565b61105184939293612392565b61105c8b8487611edc565b857f0000000000000000000000000000000000000000000000000000000000000000169a61108a8185611a98565b8c3b15610a97578a8d8b8b5180948193630d0e30db60e41b83525af18015610f6f5787949392918c916110e3575b5050946110cc9291610ed8610ee497611f70565b996102a56110d861205f565b6024358d1015611a68565b6110f1919294939550611885565b610f6b57909185928a386110b8565b9091506020813d8211611133575b8161111b602093836118e7565b810103126104365761112c90611af4565b903861103b565b3d915061110e565b503461048457610100366003190112610484578135611158611843565b92611161611859565b9061116a61186f565b9360a4359260ff841684036104785787936001600160a01b0380981690813b1561043657835163d505accf60e01b81526001600160a01b03841686820190815230602082015260408101899052608435606082015260ff909216608083015260c43560a083015260e43560c08301529086908290819060e001038183865af180156106c7578791879161127c575b50506112099060249330908461258e565b6020888654168451938480926361f029fb60e01b825285898301525afa9182156103b3578592611241575b5061060e6105ff83612300565b9091506020813d8211611274575b8161125c602093836118e7565b8101031261039b5761126d90611af4565b9038611234565b3d915061124f565b611287919250611885565b61039b578585386111f8565b80848434611523576112a4366119a9565b6112c66112bd9c999c9b98959b9a97969493929a611fc7565b42851015611a68565b6112d96112d1612000565b8d1515611a68565b6001600160a01b03809616998a3b15610f6b57875163d505accf60e01b81526001600160a01b038616818b01908152306020820152604081018f9052606081019590955260ff909316608085015260a084015260c08301529087908290819060e0010381838c5af18015610441578a91889161150c575b505061135e9130908961258e565b60246020838754168551928380926361f029fb60e01b82528b8a8301525afa9081156106c75786916114d3575b5061139861022882612300565b96838216928551632fdde06960e11b815286818981885afa9081156103fd576113e5949261028d6102959e95938d8d6102a5958d82946103bd57505061ffff9160ff610285921690611b08565b803b1561039b5784866114249289838751809681958294636c197ff560e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b3579085916114bf575b505061144187611f70565b7f0000000000000000000000000000000000000000000000000000000000000000169161146e8786611b1b565b833b1561039b57602485928385519687948593632e1a7d4d60e01b85528401525af190811561039257506114ab5750506103779261037191611b1b565b6114b490611885565b61038e578385610362565b6114c890611885565b61038e578389611436565b90506020813d8211611504575b816114ed602093836118e7565b81010312610436576114fe90611af4565b8a61138b565b3d91506114e0565b611517919250611885565b6104365788868c611350565b5050fd5b506115456115343661196c565b610168979496939297959195611fc7565b611559611550611abb565b82341015611a68565b6001600160a01b0390816020818a54169860248651809481936361f029fb60e01b8352169b8c8a8301525afa90811561177a57899161173d575b506115b06115a082612300565b906115aa84612392565b8a61226a565b91838216938551632fdde06960e11b81528b87828a818a5afa9182156117315761161a926115f192918291611706575b5061028560ff61ffff921689611b08565b9261160a816116008689611a98565b111561029f6120be565b6116148487611a98565b90611b1b565b806116f6575b507f0000000000000000000000000000000000000000000000000000000000000000169061164e8185611a98565b8b833b15610d18578891885192838092630d0e30db60e41b8252875af180156116ec576116c7575b50918a96959493916102a561168a94611f70565b803b1561038e57815163cce7ec1360e01b81526001600160a01b038616938101938452602084018790529284918491829084908290604001610f1e565b916102a59b6116de61168a95939998979694611885565b9b5091939495969092611676565b87513d8e823e3d90fd5b6117009033612532565b38611620565b60ff925061ffff9150611728610285918c8d3d106103f6576103e281836118e7565b935091506115e0565b508751903d90823e3d90fd5b90506020813d8211611772575b81611757602093836118e7565b8101031261176e5761176890611af4565b38611593565b8880fd5b3d915061174a565b84513d8b823e3d90fd5b508260c0366003190112610d185761179a61182d565b906024359367ffffffffffffffff94858111610484576117bd9036908301611925565b9460443581811161038e576117d59036908401611925565b92606435918211610d185750916117f6611804949260a09794369101611925565b9060a4359360843593611b28565b938591939551956001600160a01b03809216875216602086015284015260608301526080820152f35b600435906001600160a01b038216820361047857565b602435906001600160a01b038216820361047857565b604435906001600160a01b038216820361047857565b606435906001600160a01b038216820361047857565b67ffffffffffffffff811161189957604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761189957604052565b6040810190811067ffffffffffffffff82111761189957604052565b90601f8019910116810190811067ffffffffffffffff82111761189957604052565b67ffffffffffffffff811161189957601f01601f191660200190565b81601f820112156104785780359061193c82611909565b9261194a60405194856118e7565b8284526020838301011161047857816000926020809301838601378301015290565b60a09060031901126104785760043590602435906001600160a01b0390604435828116810361047857916064359081168103610478579060843590565b6101209060031901126104785760043590602435906001600160a01b0360443581811681036104785791606435828116810361047857916084359081168103610478579060a4359060c43560ff81168103610478579060e435906101043590565b60809060031901126104785760043590602435906044359060643590565b919082519283825260005b848110611a54575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611a33565b15611a705750565b611a949060405191829162461bcd60e51b8352602060048401526024830190611a28565b0390fd5b91908201809211611aa557565b634e487b7160e01b600052601160045260246000fd5b60405190611ac8826118cb565b602082527f436f7265203a204552525f434f52455f494e56414c49445f53454e445f4e41446020830152565b51906001600160a01b038216820361047857565b81810292918115918404141715611aa557565b91908203918211611aa557565b9295919594909394600093600096876001600160a01b03978882541660409b8c51967f8efc549a000000000000000000000000000000000000000000000000000000008852602088600481865afa978815611e4d57908e8a8e9493889b611e11575b50611c1b6080969489989694611c0c611bf99b958f8f968f91611bb3610de492611bb894611a98565b611a98565b519b8c998a9889977f581925470000000000000000000000000000000000000000000000000000000089521660048801528b60248801526084870190611a28565b6003199384878303016044880152611a28565b91848303016064850152611a28565b03925af1928315611e05578192829583918496611dab575b50859b829d889f879b837f00000000000000000000000000000000000000000000000000000000000000001697611c6e8d611bb3848b611a98565b893b156104cc57818a6004865180948193630d0e30db60e41b83525af18015611da157611d8d575b505086611cb8575050505050505050505050611cb190611f70565b9493929190565b92989f50959c50959c50611cdc929891979e50839950611bb381611ce1958f611edc565b611f70565b611cfb868a611cf58d89610ed88282611b08565b9a612454565b828916803b1561048457815163cce7ec1360e01b81526001600160a01b0386166004820152602481018a9052919083908390604490829084905af1908115610392575090889594939291611d6f575b505091611bb384611d679693611d61958d16612454565b95611b1b565b929493929190565b819293949550611d7e90611885565b610d1857908187949392611d4a565b611d9991929450611885565b913880611c96565b84513d84823e3d90fd5b965094505091506080843d8211611dfd575b81611dca608093836118e7565b81010312610d1857611ddb84611af4565b91611de860208601611af4565b9260608d870151960151909395909438611c33565b3d9150611dbd565b508a51903d90823e3d90fd5b939450505097506020813d8211611e45575b81611e30602093836118e7565b8101031261039b5751968b91908e8a88611b8a565b3d9150611e23565b8e513d87823e3d90fd5b919082604091031261047857815160ff811681036104785760209092015161ffff811681036104785790565b8115611e8d570490565b634e487b7160e01b600052601260045260246000fd5b60405190611eb0826118cb565b601b82527f436f7265203a204552525f434f52455f494e56414c49445f46454500000000006020830152565b60406001600160a01b03919392936004825180948193632fdde06960e11b8352165afa8015611f6457611f3393611f29926000908193611f35575b5061ffff9160ff610285921690611b08565b111561029f611ea3565b565b60ff9350610285915091611f5961ffff9360403d81116103f6576103e281836118e7565b949092505091611f17565b6040513d6000823e3d90fd5b611f33906001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016907f000000000000000000000000000000000000000000000000000000000000000016612454565b60405190611fd4826118cb565b601782527f436f7265203a204552525f434f52455f455850495245440000000000000000006020830152565b6040519061200d826118af565b602182527f4e000000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4960208201520152565b6040519061206c826118af565b602282527f55540000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4f60208201520152565b604051906120cb826118af565b602582527f4e5f4d41580000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4960208201520152565b6040519061212a826118af565b602182527f45000000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414c4c4f57414e4360208201520152565b909181151580612261575b80612258575b15612214576121a69161219f91611a98565b8092611a98565b600019810191908211611aa5576121bc91611e83565b818110156121d0576121cd91611b1b565b90565b606460405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420696e707574730000000000000000000000000000000000006044820152fd5b5083151561218d565b50801515612187565b6122e0906122e792946122db604051612282816118af565b603681527f4e616446756e4c696272617279203a204552525f4e41445f46554e5f4c49425260208201527f4152595f494e56414c49445f414d4f554e545f4f555400000000000000000000604082015282841115611a68565b611b1b565b8093611a98565b6000198101908111611aa5576121cd926122db91611e83565b6001600160a01b036040809260048251809481937f7f8f6184000000000000000000000000000000000000000000000000000000008352165afa908115612387576000928392612351575b50509091565b9080939250813d8311612380575b61236981836118e7565b81010312610d18575060208151910151388061234b565b503d61235f565b82513d6000823e3d90fd5b60206001600160a01b03916004604051809481937fee39e7a0000000000000000000000000000000000000000000000000000000008352165afa908115611f64576000916123de575090565b906020823d8211612404575b816123f7602093836118e7565b81010312610d1857505190565b3d91506123ea565b3d15612437573d9061241d82611909565b9161242b60405193846118e7565b82523d6000602084013e565b606090565b90816020910312610478575180151581036104785790565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082019081526001600160a01b039384166024830152604480830195909552938152611f33936000938493928491906124b36064826118e7565b5193165af16124c061240c565b81612503575b50604051906124d4826118cb565b601982527f4552525f5452414e534645525f45524332305f4641494c4544000000000000006020830152611a68565b8051801592508215612518575b5050386124c6565b61252b925060208091830101910161243c565b3880612510565b60008080611f33946001600160a01b038295166108fcf161255161240c565b506040519061255f826118cb565b601782527f4552525f5452414e534645525f4e41445f4641494c45440000000000000000006020830152611a68565b9290926040519160208301947f23b872dd0000000000000000000000000000000000000000000000000000000086526001600160a01b039485809216602486015216604484015260648301526064825260a082019382851067ffffffffffffffff86111761189957600080948194611f33976040525193165af161261061240c565b81612653575b5060405190612624826118cb565b601e82527f4552525f5452414e534645525f46524f4d5f45524332305f4641494c454400006020830152611a68565b8051801592508215612668575b505038612616565b61267b925060208091830101910161243c565b388061266056fea2646970667358221220671f96d545285b35ec6b68d51ffcbfbf9b492f54a8b02aae0c9b9fff78321d5d64736f6c63430008140033",
    "sourceMap": "902:22000:47:-:0;;;;;;;;;;;;;-1:-1:-1;;902:22000:47;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;902:22000:47;;-1:-1:-1;;;;902:22000:47;;;1534:12;;;;;-1:-1:-1;;;;;902:22000:47;;1556:24;902:22000;;;;;;;;1534:12;902:22000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;902:22000:47;;;;;;-1:-1:-1;902:22000:47;;;;;-1:-1:-1;902:22000:47;;;;-1:-1:-1;;;;;902:22000:47;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60406080815260049081361015610064575b50361561001d57600080fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361004f57005b600190634e487b7160e01b6000525260246000fd5b90600091823560e01c806302a579151461178457806319a5049f14611527578381632a7f6367146112935750806334d8f7071461113b5780633bd7042d14610fb4578063526cc7a714610db757806352707d8c14610d98578063571fd01214610d72578063577898da14610d2e57806361babc7614610c58578063663a313e14610b1c578063849f72ce1461086a578063c45a015514610844578063c4d66de814610772578063e548cedd14610513578063ec0f7cf014610488578063f98355e4146104d0578063fbfa77cf146104885763feb2003014610146575090610011565b3461048457610171836101583661196c565b6101689894989793969197611fc7565b90421115611a68565b8151636eb1769f60e11b815233848201908152306020828101919091526001600160a01b039384169792909182908290819060400103818b5afa90811561044157879161044b575b506101cf908a6101c761211d565b911015611a68565b6101e26101da612000565b8a1515611a68565b6101ee8930338a61258e565b602481848854168651928380926361f029fb60e01b82528c8b8301525afa918215610441578792610407575b505061023761022882612300565b61023184612392565b8c61217c565b96838216928551632fdde06960e11b815286818981885afa9081156103fd576102aa949261028d6102959e95938d8d6102a5958d82946103bd575b505061ffff9160ff610285921690611b08565b911690611e83565b9d8e8d611b1b565b101561029f61205f565b90611a68565b612454565b803b1561039b5784866102e99289838751809681958294636c197ff560e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b35790859161039f575b505061030687611f70565b7f000000000000000000000000000000000000000000000000000000000000000016916103338786611b1b565b833b1561039b57602485928385519687948593632e1a7d4d60e01b85528401525af1908115610392575061037a575b50506103779261037191611b1b565b90612532565b80f35b61038390611885565b61038e578338610362565b8380fd5b513d84823e3d90fd5b8480fd5b6103a890611885565b61038e5783386102fb565b83513d87823e3d90fd5b60ff9450610285925061ffff9391816103ea92903d106103f6575b6103e281836118e7565b810190611e57565b9490925050918d610272565b503d6103d8565b87513d8b823e3d90fd5b90809250813d831161043a575b61041e81836118e7565b810103126104365761042f90611af4565b388061021a565b8580fd5b503d610414565b85513d89823e3d90fd5b809750828092503d831161047d575b61046481836118e7565b81010312610478576101cf8a9651906101b9565b600080fd5b503d61045a565b8280fd5b8382346104cc57816003193601126104cc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b8382346104cc5760203660031901126104cc576060906105036104f161182d565b916104fb83612300565b929093612392565b9181519384526020840152820152f35b503461048457608036600319011261048457813583610530611843565b93610539611859565b93610550610545611fc7565b426064351015611a68565b8051636eb1769f60e11b815233838201908152306020828101919091526001600160a01b03989092908916918390829081906040010381855afa9081156106c757869161073e575b506105a690876101c761211d565b6105b96105b1612000565b871515611a68565b6105c58630338461258e565b602482898754168551928380926361f029fb60e01b8252868a8301525afa9283156106c7578693610706575b505061060e6105ff83612300565b61060885612392565b8961217c565b9588831690845193632fdde06960e11b855285858881865afa9384156106fc57889589956106d1575b50906106439291612454565b803b15610436578587610682928a838851809681958294636c197ff560e01b84528d8401602090939291936001600160a01b0360408201951681520152565b03925af180156106c7579086916106b3575b505061ffff61028560ff6106a9941688611b08565b9561030687611f70565b6106bc90611885565b61039b578438610694565b84513d88823e3d90fd5b610643939296506106f0919550873d89116103f6576103e281836118e7565b95909594909192610637565b86513d8a823e3d90fd5b9080929350813d8311610737575b61071e81836118e7565b8101031261039b5761072f90611af4565b9038806105f1565b503d610714565b809650838092503d831161076b575b61075781836118e7565b81010312610478576105a689955190610598565b503d61074d565b8382346104cc5760203660031901126104cc5774010000000000000000000000000000000000000000907fffffffffffffffffffffff0000000000000000000000000000000000000000006001600160a01b036107cd61182d565b61083a8654947f5a45440000000000000000000000000000000000000000000000000000000000815191610800836118af565b602383527f436f7265203a204552525f434f52455f414c52454144595f494e495449414c49602084015282015260ff8660a01c1615611a68565b1691161717815580f35b8382346104cc57816003193601126104cc576001600160a01b0360209254169051908152f35b5090826108886108793661196c565b61016898949793959198611fc7565b8251636eb1769f60e11b815233838201908152306020828101919091526001600160a01b03939092908416918390829081906040010381855afa9081156106fc578891610aea575b5086111580610ae1575b6108e69061029f61211d565b602482848954168751928380926361f029fb60e01b8252868a8301525afa9283156106fc578893610aa5575b505061091d82612300565b96909161092984612392565b97610935348c87611edc565b857f00000000000000000000000000000000000000000000000000000000000000001698893b15610a97578851630d0e30db60e41b81528b818a81348f5af18015610a9b578c88959493928f92610a79575b5050956109b6926109a4926109c29861099f34611f70565b61226a565b936109ad6120be565b90851115611a68565b6102a58330338461258e565b16803b1561039b578486610a029289838751809681958294636c197ff560e01b84528a8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b357908591610a65575b5050823b1561038e5784602485928385519687948593632e1a7d4d60e01b85528401525af19081156103925750610a51575b505061037791612532565b610a5a90611885565b610484578238610a46565b610a6e90611885565b61038e578338610a14565b9092979550610a889150611885565b610a97578592948c8c38610987565b8a80fd5b8a513d8e823e3d90fd5b9080929350813d8311610ada575b610abd81836118e7565b81010312610ad657610ace90611af4565b903880610912565b8680fd5b503d610ab3565b508515156108da565b809850838092503d8311610b15575b610b0381836118e7565b8101031261047857858a9751906108d0565b503d610af9565b509082610b28366119a9565b92939a9697999594610b47610b3e939293611fc7565b42871015611a68565b6001600160a01b0380961694853b15610a9757885163d505accf60e01b81526001600160a01b03909216828901908152306020820152604081018b9052606081019190915260ff909216608083015260a082019290925260c08101929092529087908290819060e001038183865af1801561044157908791610c44575b5050602490610bd46105b16120be565b6020838854168651938480926361f029fb60e01b825285898301525afa918215610441578792610c09575b5061091d82612300565b9091506020813d8211610c3c575b81610c24602093836118e7565b81010312610ad657610c3590611af4565b9038610bff565b3d9150610c17565b610c4d90611885565b610436578538610bc4565b509190346104cc57826003193601126104cc57610c7361182d565b926020610c7e611843565b9460248351809781936361f029fb60e01b83526001600160a01b03978880931690840152165afa928315610d23578093610ce2575b5060809350610cc183612300565b9190610ccc85612392565b9382519516855260208501528301526060820152f35b9092506020843d8211610d1b575b81610cfd602093836118e7565b81010312610d185750610d11608093611af4565b9138610cb3565b80fd5b3d9150610cf0565b9051903d90823e3d90fd5b8382346104cc57816003193601126104cc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b8382346104cc57602090610d91610d8836611a0a565b9291909161226a565b9051908152f35b8382346104cc57602090610d91610dae36611a0a565b9291909161217c565b50610dd783610dc53661196c565b61016898949298979397969196611fc7565b610def610de48783611a98565b34101561029f611abb565b610e02610dfa612000565b821515611a68565b610e0d6105b1611ea3565b6001600160a01b0380916020828754169960248651809581936361f029fb60e01b8352169c8d8a8301525afa9182156106c7578692610f79575b50610e5182612300565b610e5d84939293612392565b610e688b8487611edc565b857f0000000000000000000000000000000000000000000000000000000000000000169a610e968185611a98565b8c3b15610a97578a8d8b8b5180948193630d0e30db60e41b83525af18015610f6f5787949392918c91610f4e575b505094610ede9291610ed8610ee497611f70565b8561217c565b99612454565b16803b1561038e57815163cce7ec1360e01b81526001600160a01b0386169381019384526020840187905292849184918290849082906040015b03925af19081156103925750610f3a575b505061037792612454565b610f4390611885565b61038e578338610f2f565b610f5c919294939550611885565b610f6b57909185928a38610ec4565b8980fd5b89513d8d823e3d90fd5b9091506020813d8211610fac575b81610f94602093836118e7565b8101031261043657610fa590611af4565b9038610e47565b3d9150610f87565b5060c036600319011261048457604435908235610fcf61186f565b93608435926001600160a01b03808516850361047857808894610ffe610ff3611fc7565b4260a4351015611a68565b61100b610de48983611a98565b6020828754169960248651809581936361f029fb60e01b8352169c8d8a8301525afa9182156106c7578692611100575b5061104582612300565b61105184939293612392565b61105c8b8487611edc565b857f0000000000000000000000000000000000000000000000000000000000000000169a61108a8185611a98565b8c3b15610a97578a8d8b8b5180948193630d0e30db60e41b83525af18015610f6f5787949392918c916110e3575b5050946110cc9291610ed8610ee497611f70565b996102a56110d861205f565b6024358d1015611a68565b6110f1919294939550611885565b610f6b57909185928a386110b8565b9091506020813d8211611133575b8161111b602093836118e7565b810103126104365761112c90611af4565b903861103b565b3d915061110e565b503461048457610100366003190112610484578135611158611843565b92611161611859565b9061116a61186f565b9360a4359260ff841684036104785787936001600160a01b0380981690813b1561043657835163d505accf60e01b81526001600160a01b03841686820190815230602082015260408101899052608435606082015260ff909216608083015260c43560a083015260e43560c08301529086908290819060e001038183865af180156106c7578791879161127c575b50506112099060249330908461258e565b6020888654168451938480926361f029fb60e01b825285898301525afa9182156103b3578592611241575b5061060e6105ff83612300565b9091506020813d8211611274575b8161125c602093836118e7565b8101031261039b5761126d90611af4565b9038611234565b3d915061124f565b611287919250611885565b61039b578585386111f8565b80848434611523576112a4366119a9565b6112c66112bd9c999c9b98959b9a97969493929a611fc7565b42851015611a68565b6112d96112d1612000565b8d1515611a68565b6001600160a01b03809616998a3b15610f6b57875163d505accf60e01b81526001600160a01b038616818b01908152306020820152604081018f9052606081019590955260ff909316608085015260a084015260c08301529087908290819060e0010381838c5af18015610441578a91889161150c575b505061135e9130908961258e565b60246020838754168551928380926361f029fb60e01b82528b8a8301525afa9081156106c75786916114d3575b5061139861022882612300565b96838216928551632fdde06960e11b815286818981885afa9081156103fd576113e5949261028d6102959e95938d8d6102a5958d82946103bd57505061ffff9160ff610285921690611b08565b803b1561039b5784866114249289838751809681958294636c197ff560e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03925af180156103b3579085916114bf575b505061144187611f70565b7f0000000000000000000000000000000000000000000000000000000000000000169161146e8786611b1b565b833b1561039b57602485928385519687948593632e1a7d4d60e01b85528401525af190811561039257506114ab5750506103779261037191611b1b565b6114b490611885565b61038e578385610362565b6114c890611885565b61038e578389611436565b90506020813d8211611504575b816114ed602093836118e7565b81010312610436576114fe90611af4565b8a61138b565b3d91506114e0565b611517919250611885565b6104365788868c611350565b5050fd5b506115456115343661196c565b610168979496939297959195611fc7565b611559611550611abb565b82341015611a68565b6001600160a01b0390816020818a54169860248651809481936361f029fb60e01b8352169b8c8a8301525afa90811561177a57899161173d575b506115b06115a082612300565b906115aa84612392565b8a61226a565b91838216938551632fdde06960e11b81528b87828a818a5afa9182156117315761161a926115f192918291611706575b5061028560ff61ffff921689611b08565b9261160a816116008689611a98565b111561029f6120be565b6116148487611a98565b90611b1b565b806116f6575b507f0000000000000000000000000000000000000000000000000000000000000000169061164e8185611a98565b8b833b15610d18578891885192838092630d0e30db60e41b8252875af180156116ec576116c7575b50918a96959493916102a561168a94611f70565b803b1561038e57815163cce7ec1360e01b81526001600160a01b038616938101938452602084018790529284918491829084908290604001610f1e565b916102a59b6116de61168a95939998979694611885565b9b5091939495969092611676565b87513d8e823e3d90fd5b6117009033612532565b38611620565b60ff925061ffff9150611728610285918c8d3d106103f6576103e281836118e7565b935091506115e0565b508751903d90823e3d90fd5b90506020813d8211611772575b81611757602093836118e7565b8101031261176e5761176890611af4565b38611593565b8880fd5b3d915061174a565b84513d8b823e3d90fd5b508260c0366003190112610d185761179a61182d565b906024359367ffffffffffffffff94858111610484576117bd9036908301611925565b9460443581811161038e576117d59036908401611925565b92606435918211610d185750916117f6611804949260a09794369101611925565b9060a4359360843593611b28565b938591939551956001600160a01b03809216875216602086015284015260608301526080820152f35b600435906001600160a01b038216820361047857565b602435906001600160a01b038216820361047857565b604435906001600160a01b038216820361047857565b606435906001600160a01b038216820361047857565b67ffffffffffffffff811161189957604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761189957604052565b6040810190811067ffffffffffffffff82111761189957604052565b90601f8019910116810190811067ffffffffffffffff82111761189957604052565b67ffffffffffffffff811161189957601f01601f191660200190565b81601f820112156104785780359061193c82611909565b9261194a60405194856118e7565b8284526020838301011161047857816000926020809301838601378301015290565b60a09060031901126104785760043590602435906001600160a01b0390604435828116810361047857916064359081168103610478579060843590565b6101209060031901126104785760043590602435906001600160a01b0360443581811681036104785791606435828116810361047857916084359081168103610478579060a4359060c43560ff81168103610478579060e435906101043590565b60809060031901126104785760043590602435906044359060643590565b919082519283825260005b848110611a54575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611a33565b15611a705750565b611a949060405191829162461bcd60e51b8352602060048401526024830190611a28565b0390fd5b91908201809211611aa557565b634e487b7160e01b600052601160045260246000fd5b60405190611ac8826118cb565b602082527f436f7265203a204552525f434f52455f494e56414c49445f53454e445f4e41446020830152565b51906001600160a01b038216820361047857565b81810292918115918404141715611aa557565b91908203918211611aa557565b9295919594909394600093600096876001600160a01b03978882541660409b8c51967f8efc549a000000000000000000000000000000000000000000000000000000008852602088600481865afa978815611e4d57908e8a8e9493889b611e11575b50611c1b6080969489989694611c0c611bf99b958f8f968f91611bb3610de492611bb894611a98565b611a98565b519b8c998a9889977f581925470000000000000000000000000000000000000000000000000000000089521660048801528b60248801526084870190611a28565b6003199384878303016044880152611a28565b91848303016064850152611a28565b03925af1928315611e05578192829583918496611dab575b50859b829d889f879b837f00000000000000000000000000000000000000000000000000000000000000001697611c6e8d611bb3848b611a98565b893b156104cc57818a6004865180948193630d0e30db60e41b83525af18015611da157611d8d575b505086611cb8575050505050505050505050611cb190611f70565b9493929190565b92989f50959c50959c50611cdc929891979e50839950611bb381611ce1958f611edc565b611f70565b611cfb868a611cf58d89610ed88282611b08565b9a612454565b828916803b1561048457815163cce7ec1360e01b81526001600160a01b0386166004820152602481018a9052919083908390604490829084905af1908115610392575090889594939291611d6f575b505091611bb384611d679693611d61958d16612454565b95611b1b565b929493929190565b819293949550611d7e90611885565b610d1857908187949392611d4a565b611d9991929450611885565b913880611c96565b84513d84823e3d90fd5b965094505091506080843d8211611dfd575b81611dca608093836118e7565b81010312610d1857611ddb84611af4565b91611de860208601611af4565b9260608d870151960151909395909438611c33565b3d9150611dbd565b508a51903d90823e3d90fd5b939450505097506020813d8211611e45575b81611e30602093836118e7565b8101031261039b5751968b91908e8a88611b8a565b3d9150611e23565b8e513d87823e3d90fd5b919082604091031261047857815160ff811681036104785760209092015161ffff811681036104785790565b8115611e8d570490565b634e487b7160e01b600052601260045260246000fd5b60405190611eb0826118cb565b601b82527f436f7265203a204552525f434f52455f494e56414c49445f46454500000000006020830152565b60406001600160a01b03919392936004825180948193632fdde06960e11b8352165afa8015611f6457611f3393611f29926000908193611f35575b5061ffff9160ff610285921690611b08565b111561029f611ea3565b565b60ff9350610285915091611f5961ffff9360403d81116103f6576103e281836118e7565b949092505091611f17565b6040513d6000823e3d90fd5b611f33906001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016907f000000000000000000000000000000000000000000000000000000000000000016612454565b60405190611fd4826118cb565b601782527f436f7265203a204552525f434f52455f455850495245440000000000000000006020830152565b6040519061200d826118af565b602182527f4e000000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4960208201520152565b6040519061206c826118af565b602282527f55540000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4f60208201520152565b604051906120cb826118af565b602582527f4e5f4d41580000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414d4f554e545f4960208201520152565b6040519061212a826118af565b602182527f45000000000000000000000000000000000000000000000000000000000000006040837f436f7265203a204552525f434f52455f494e56414c49445f414c4c4f57414e4360208201520152565b909181151580612261575b80612258575b15612214576121a69161219f91611a98565b8092611a98565b600019810191908211611aa5576121bc91611e83565b818110156121d0576121cd91611b1b565b90565b606460405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420696e707574730000000000000000000000000000000000006044820152fd5b5083151561218d565b50801515612187565b6122e0906122e792946122db604051612282816118af565b603681527f4e616446756e4c696272617279203a204552525f4e41445f46554e5f4c49425260208201527f4152595f494e56414c49445f414d4f554e545f4f555400000000000000000000604082015282841115611a68565b611b1b565b8093611a98565b6000198101908111611aa5576121cd926122db91611e83565b6001600160a01b036040809260048251809481937f7f8f6184000000000000000000000000000000000000000000000000000000008352165afa908115612387576000928392612351575b50509091565b9080939250813d8311612380575b61236981836118e7565b81010312610d18575060208151910151388061234b565b503d61235f565b82513d6000823e3d90fd5b60206001600160a01b03916004604051809481937fee39e7a0000000000000000000000000000000000000000000000000000000008352165afa908115611f64576000916123de575090565b906020823d8211612404575b816123f7602093836118e7565b81010312610d1857505190565b3d91506123ea565b3d15612437573d9061241d82611909565b9161242b60405193846118e7565b82523d6000602084013e565b606090565b90816020910312610478575180151581036104785790565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082019081526001600160a01b039384166024830152604480830195909552938152611f33936000938493928491906124b36064826118e7565b5193165af16124c061240c565b81612503575b50604051906124d4826118cb565b601982527f4552525f5452414e534645525f45524332305f4641494c4544000000000000006020830152611a68565b8051801592508215612518575b5050386124c6565b61252b925060208091830101910161243c565b3880612510565b60008080611f33946001600160a01b038295166108fcf161255161240c565b506040519061255f826118cb565b601782527f4552525f5452414e534645525f4e41445f4641494c45440000000000000000006020830152611a68565b9290926040519160208301947f23b872dd0000000000000000000000000000000000000000000000000000000086526001600160a01b039485809216602486015216604484015260648301526064825260a082019382851067ffffffffffffffff86111761189957600080948194611f33976040525193165af161261061240c565b81612653575b5060405190612624826118cb565b601e82527f4552525f5452414e534645525f46524f4d5f45524332305f4641494c454400006020830152611a68565b8051801592508215612668575b505038612616565b61267b925060208091830101910161243c565b388061266056fea2646970667358221220671f96d545285b35ec6b68d51ffcbfbf9b492f54a8b02aae0c9b9fff78321d5d64736f6c63430008140033",
    "sourceMap": "902:22000:47:-:0;;;;;;;;;;;;-1:-1:-1;902:22000:47;;;;;;;;;-1:-1:-1;;;;;1767:4:47;902:22000;1753:10;:18;902:22000;;;;;;-1:-1:-1;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2032:54;902:22000;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2052:15;;-1:-1:-1;2040:27:47;2032:54;:::i;:::-;902:22000;;-1:-1:-1;;;13452:50:47;;13476:10;13452:50;;;902:22000;;;13496:4;13452:50;902:22000;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;13452:50;;;;902:22000;;;;;;13452:50;;;;;;;;;;;;;;902:22000;;13512:58;902:22000;;;;:::i;:::-;13520:21;;;13512:58;:::i;:::-;13580:49;902:22000;;:::i;:::-;13588:12;;;13580:49;:::i;:::-;13697:8;13496:4;;13476:10;13697:8;;:::i;:::-;902:22000;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;21945:120:47;4282:25:75;;;:::i;:::-;4321;;;:::i;:::-;21945:120:47;;:::i;:::-;902:22000;;;;;;;-1:-1:-1;;;14007:48:47;;;;;;;;;;;;;;14316:8;14007:48;;3508:34:75;14205:15:47;14007:48;;;;;14197:69;14007:48;;;;;;902:22000;;;;;;3509:20:75;902:22000:47;;3509:20:75;;:::i;:::-;902:22000:47;;3508:34:75;;:::i;:::-;14205:15:47;;;;:::i;:::-;:31;;902:22000;;:::i;:::-;14197:69;;:::i;:::-;14316:8;:::i;:::-;14336:40;;;;;902:22000;;14336:40;902:22000;;;;;14336:40;;;;;;-1:-1:-1;;;14336:40:47;;;;;2315:34:54;;;;;;-1:-1:-1;;;;;2315:34:54;;;902:22000:47;;;;2315:34:54;902:22000:47;2315:34:54;14336:40:47;;;;;;;;;;;;;;902:22000;14401:3;;;;;:::i;:::-;14421:4;902:22000;14436:15;;;;;:::i;:::-;14415:37;;;;;902:22000;;;;;;14415:37;;;;;-1:-1:-1;;;14415:37:47;;;;902:22000;14415:37;;;;;;;;;;902:22000;14498:15;;;;;;;:::i;:::-;;;:::i;:::-;902:22000;;14415:37;;;;:::i;:::-;902:22000;;14415:37;;;;902:22000;;;;14415:37;902:22000;;;;;;;;14415:37;902:22000;;;14336:40;;;;:::i;:::-;902:22000;;14336:40;;;;;902:22000;;;;;;;;;14007:48;902:22000;14007:48;;3509:20:75;14007:48:47;;902:22000;14007:48;;;;;;;-1:-1:-1;14007:48:47;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;902:22000;;;;;;;;;5572:45:75;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;902:22000:47;;;;5572:45:75;;;;;;902:22000:47;;;;;;;;;13452:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000;;;;13512:58;902:22000;;;13452:50;;;902:22000;;;;13452:50;;;;;902:22000;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1201:31:47;902:22000;;;;;;;;;;;;;;;;-1:-1:-1;;902:22000:47;;;;;;4853:25:75;902:22000:47;;:::i;:::-;4814:25:75;;;;:::i;:::-;4853;;;;:::i;:::-;902:22000:47;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;902:22000:47;;;;;;;;;:::i;:::-;;;;:::i;:::-;;2032:54;902:22000;;:::i;:::-;2052:15;902:22000;;2040:27;;2032:54;:::i;:::-;902:22000;;-1:-1:-1;;;10171:50:47;;10195:10;10171:50;;;902:22000;;;10215:4;902:22000;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;;10171:50;;;;;;;;;;;;;;902:22000;;10231:58;902:22000;;;;:::i;10231:58::-;10299:49;902:22000;;:::i;:::-;10307:12;;;10299:49;:::i;:::-;10416:8;10215:4;;10195:10;10416:8;;:::i;:::-;902:22000;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;21945:120:47;4282:25:75;;;:::i;:::-;4321;;;:::i;:::-;21945:120:47;;:::i;:::-;902:22000;;;;;;;10726:48;-1:-1:-1;;;10726:48:47;;;;;;;;;;;;;;;;;;;;902:22000;10824:8;;;;;;:::i;:::-;10844:40;;;;;902:22000;;10844:40;902:22000;;;;;10844:40;;;;;;-1:-1:-1;;;10844:40:47;;;;;2315:34:54;;;;;;-1:-1:-1;;;;;2315:34:54;;;902:22000:47;;;;2315:34:54;902:22000:47;2315:34:54;10844:40:47;;;;;;;;;;;;;;902:22000;;;;3509:20:75;902:22000:47;3508:34:75;902:22000:47;;3509:20:75;;:::i;3508:34::-;11041:3:47;;;;:::i;10844:40::-;;;;:::i;:::-;902:22000;;10844:40;;;;;902:22000;;;;;;;;;10726:48;10824:8;10726:48;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;902:22000;;;;;;;;;5572:45:75;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;;;;;10171:50:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000;;;;10231:58;902:22000;;;10171:50;;;;;;;;902:22000;;;;;;;;-1:-1:-1;;902:22000:47;;;;2736:37:54;902:22000:47;2736:37:54;-1:-1:-1;;;;;902:22000:47;;:::i;:::-;2167:53;902:22000;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2175:14;2167:53;:::i;:::-;902:22000;2736:37:54;;;;;;902:22000:47;;;;;;;;;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;2032:54;902:22000;;;:::i;:::-;;;;;;;;;;:::i;2032:54::-;902:22000;;-1:-1:-1;;;17340:50:47;;17364:10;17340:50;;;902:22000;;;17384:4;17340:50;902:22000;;;;;;;-1:-1:-1;;;;;902:22000:47;17340:50;;902:22000;;;;17340:50;;902:22000;;;;;;17340:50;;;;;;;;;;;;;;902:22000;17421:24;;-1:-1:-1;17421:24:47;:43;;;902:22000;17400:114;902:22000;;;:::i;17400:114::-;902:22000;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;;;;:::i;:::-;4321;;;;;;:::i;:::-;17706:9:47;17752:3;17706:9;17752:3;;;:::i;:::-;17772:4;;902:22000;17766:33;;;;;;902:22000;;-1:-1:-1;;;17766:33:47;;902:22000;;;;17706:9;902:22000;17766:33;;;;;;;;;;;;;;;;902:22000;17706:9;;;17920:64;17706:9;22564:120;17706:9;18111:8;17706:9;17824:3;17706:9;17824:3;:::i;:::-;22564:120;:::i;:::-;902:22000;;;:::i;:::-;17928:23;;;;17920:64;:::i;:::-;18053:8;17384:4;;17364:10;18053:8;;:::i;18111:::-;902:22000;18131:40;;;;;902:22000;;18131:40;902:22000;;;;;18131:40;;;;;;-1:-1:-1;;;18131:40:47;;;;;2315:34:54;;;;;;-1:-1:-1;;;;;2315:34:54;;;902:22000:47;;;;2315:34:54;902:22000:47;2315:34:54;18131:40:47;;;;;;;;;;;;;;902:22000;18182:31;;;;;;;902:22000;;;;;;;18182:31;;;;;-1:-1:-1;;;18182:31:47;;;;902:22000;18182:31;;;;;;;;;;902:22000;18259:9;;;;;:::i;18182:31::-;;;;:::i;:::-;902:22000;;18182:31;;;;18131:40;;;;:::i;:::-;902:22000;;18131:40;;;;17766:33;;;;;;;;;;:::i;:::-;902:22000;;17766:33;;;;;;;;902:22000;;;;17766:33;902:22000;;;;;;;;;5572:45:75;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;902:22000:47;;;;5572:45:75;;;;;17421:43:47;-1:-1:-1;17449:15:47;;;17421:43;;17340:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000;;;;;;;;17340:50;;;;;;;;902:22000;;;;;;;:::i;:::-;;;;;;;;;2032:54;902:22000;;;;;:::i;:::-;2052:15;2040:27;;;2032:54;:::i;:::-;-1:-1:-1;;;;;902:22000:47;;;19152:173;;;;;;902:22000;;-1:-1:-1;;;19152:173:47;;-1:-1:-1;;;;;902:22000:47;;;19152:173;;;902:22000;;;19218:4;902:22000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19152:173;;;;;;;;;;;;;;;902:22000;;;;;19335:56;902:22000;;:::i;19335:56::-;5572:45:75;902:22000:47;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;;;:::i;5572:45::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;;-1:-1:-1;5572:45:75;;19152:173:47;;;;:::i;:::-;902:22000;;19152:173;;;;902:22000;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;-1:-1:-1;;;;;902:22000:47;;;;;5572:45:75;;;902:22000:47;;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;902:22000:47;4282:25:75;;;;;:::i;:::-;4321;;;;;:::i;:::-;902:22000:47;;;;;;;;;;;;;;;;;;;5572:45:75;;;;902:22000:47;5572:45:75;;;;;;;;;902:22000:47;5572:45:75;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;902:22000:47;2315:34:54;;:::i;:::-;5572:45:75;;;;902:22000:47;;;5572:45:75;;;-1:-1:-1;5572:45:75;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1108:29:47;902:22000;;;;;;;;;;;;22564:120;902:22000;;;:::i;:::-;22564:120;;;;;:::i;:::-;902:22000;;;;;;;;;;;;;;21945:120;902:22000;;;:::i;:::-;21945:120;;;;;:::i;902:22000::-;;2032:54;902:22000;;;;:::i;:::-;;;;;;;;;;;;;:::i;2032:54::-;5862:63;5883:14;;;;:::i;:::-;5870:9;:27;;902:22000;;:::i;5862:63::-;5935:49;902:22000;;:::i;:::-;5943:12;;;5935:49;:::i;:::-;5994:38;902:22000;;:::i;5994:38::-;-1:-1:-1;;;;;902:22000:47;;5572:45:75;902:22000:47;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;902:22000:47;5572:45:75;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;;;:::i;:::-;4321;;;;;;:::i;:::-;6236:3:47;;;;;:::i;:::-;6257:4;;902:22000;6278:14;;;;;:::i;:::-;6251:44;;;;;902:22000;;;;;6251:44;;;;-1:-1:-1;;;6251:44:47;;;;;;;;;;;;;;;;;902:22000;6320:3;;;21945:120;6320:3;;;6497:8;6320:3;;:::i;:::-;21945:120;;:::i;:::-;6497:8;;:::i;:::-;902:22000;6516:39;;;;;902:22000;;-1:-1:-1;;;6516:39:47;;-1:-1:-1;;;;;902:22000:47;;6516:39;;;902:22000;;;2315:34:54;;;902:22000:47;;;;;;;;;;;;;;2315:34:54;;6516:39:47;;;;;;;;;;;;;902:22000;6601:9;;;;;:::i;6516:39::-;;;;:::i;:::-;902:22000;;6516:39;;;;6251:44;;;;;;;;;:::i;:::-;902:22000;;6251:44;;;;;;;;902:22000;;;;6251:44;902:22000;;;;;;;;;5572:45:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;;-1:-1:-1;5572:45:75;;902:22000:47;-1:-1:-1;902:22000:47;;-1:-1:-1;;902:22000:47;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;2032:54;902:22000;;:::i;:::-;2052:15;902:22000;;2040:27;;2032:54;:::i;:::-;7271:63;7292:14;;;;:::i;7271:63::-;902:22000;;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;902:22000:47;5572:45:75;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;;;;:::i;:::-;4321;;;;;;:::i;:::-;7538:3:47;;;;;:::i;:::-;7614:4;;902:22000;7635:14;;;;;:::i;:::-;7608:44;;;;;902:22000;;;;;7608:44;;;;-1:-1:-1;;;7608:44:47;;;;;;;;;;;;;;;;;902:22000;7678:3;;;21945:120;7678:3;;;7886:8;7678:3;;:::i;21945:120::-;902:22000;7774:63;902:22000;;:::i;:::-;;;7782:25;;;7774:63;:::i;7608:44::-;;;;;;;;;:::i;:::-;902:22000;;7608:44;;;;;;;;5572:45:75;;;;902:22000:47;5572:45:75;;;;;;;;;902:22000:47;5572:45:75;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;;-1:-1:-1;5572:45:75;;902:22000:47;;;;;;;-1:-1:-1;;902:22000:47;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;11885:170;;;;;;902:22000;;-1:-1:-1;;;11885:170:47;;-1:-1:-1;;;;;902:22000:47;;11885:170;;;902:22000;;;11951:4;902:22000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11885:170;;;;;;;;;;;;;;;;902:22000;11951:4;;12117:8;11951:4;902:22000;11951:4;;12117:8;;;:::i;:::-;902:22000;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;21945:120:47;4282:25:75;;;:::i;5572:45::-;;;;902:22000:47;5572:45:75;;;;;;;;;902:22000:47;5572:45:75;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;;-1:-1:-1;5572:45:75;;11885:170:47;;;;;;:::i;:::-;902:22000;;11885:170;;;;;902:22000;;;;;;;;;;:::i;:::-;2032:54;902:22000;;;;;;;;;;;;;;;;:::i;:::-;2052:15;2040:27;;;2032:54;:::i;:::-;15442:49;902:22000;;:::i;:::-;15450:12;;;15442:49;:::i;:::-;-1:-1:-1;;;;;902:22000:47;;;15501:170;;;;;;902:22000;;-1:-1:-1;;;15501:170:47;;-1:-1:-1;;;;;902:22000:47;;15501:170;;;902:22000;;;15567:4;902:22000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15501:170;;;;;;;;;;;;;;;;902:22000;15567:4;;15795:8;15567:4;;15795:8;;;:::i;:::-;902:22000;5572:45:75;902:22000:47;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;21945:120:47;4282:25:75;;;:::i;21945:120:47:-;902:22000;;;;;;;-1:-1:-1;;;16180:48:47;;;;;;;;;;;;;;16489:8;16180:48;;3508:34:75;16378:15:47;16180:48;;;;;16370:69;16180:48;;;;;;902:22000;;;;;3509:20:75;902:22000:47;;3509:20:75;;:::i;16489:8:47:-;16508:40;;;;;902:22000;;16508:40;902:22000;;;;;16508:40;;;;;;-1:-1:-1;;;16508:40:47;;;;;2315:34:54;;;;;;-1:-1:-1;;;;;2315:34:54;;;902:22000:47;;;;2315:34:54;902:22000:47;2315:34:54;16508:40:47;;;;;;;;;;;;;;902:22000;16574:3;;;;;:::i;:::-;16594:4;902:22000;16609:15;;;;;:::i;:::-;16588:37;;;;;902:22000;;;;;;16588:37;;;;;-1:-1:-1;;;16588:37:47;;;;902:22000;16588:37;;;;;;;;;;16671:15;;;;;;;:::i;16588:37::-;;;;:::i;:::-;902:22000;;16588:37;;;;16508:40;;;;:::i;:::-;902:22000;;16508:40;;;;5572:45:75;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;;;;-1:-1:-1;5572:45:75;;15501:170:47;;;;;;:::i;:::-;902:22000;;15501:170;;;;;902:22000;;;;;;2032:54;902:22000;;;:::i;:::-;;;;;;;;;;;;:::i;2032:54::-;8582:60;902:22000;;:::i;:::-;8590:9;;:24;;8582:60;:::i;:::-;-1:-1:-1;;;;;902:22000:47;;5572:45:75;902:22000:47;;;;;;;;5572:45:75;;;;-1:-1:-1;;;5572:45:75;;902:22000:47;5572:45:75;;;;;902:22000:47;5572:45:75;;;;;;;;;;;902:22000:47;4282:25:75;22564:120:47;4282:25:75;;;:::i;:::-;4321;;;;:::i;:::-;22564:120:47;;:::i;:::-;902:22000;;;;;;;-1:-1:-1;;;8941:48:47;;;;;;;;;;;;;;;9233:30;;3508:34:75;;8941:48:47;;;;;902:22000;;3509:20:75;902:22000:47;;;;3509:20:75;;:::i;3508:34::-;9139:14:47;9131:70;9139:14;;;;;:::i;:::-;:29;;902:22000;;:::i;9131:70::-;9248:14;;;;:::i;:::-;9233:30;;:::i;:::-;9277:14;9273:99;;902:22000;9387:4;;902:22000;9408:14;;;;;:::i;:::-;9381:44;;;;;;902:22000;;;;9381:44;;;;-1:-1:-1;;;9381:44:47;;;;;;;;;;;902:22000;9450:3;;;;;;;;;9502:8;9450:3;;:::i;9502:8::-;9521:39;;;;;902:22000;;-1:-1:-1;;;9521:39:47;;-1:-1:-1;;;;;902:22000:47;;9521:39;;;902:22000;;;2315:34:54;;;902:22000:47;;;;;;;;;;;;;;2315:34:54;;9521:39:47;2315:34:54;9381:44:47;;9450:3;9381:44;;9502:8;9381:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;902:22000;;;;;;;;;9273:99;9350:10;9338;;9350;:::i;:::-;9273:99;;;8941:48;902:22000;8941:48;;902:22000;8941:48;;;3509:20:75;8941:48:47;;;;-1:-1:-1;8941:48:47;;;;;;:::i;:::-;;-1:-1:-1;8941:48:47;-1:-1:-1;8941:48:47;;;902:22000;;;;;;;;;;;5572:45:75;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;2315:34:54;;;:::i;:::-;5572:45:75;;;902:22000:47;;;;5572:45:75;;;-1:-1:-1;5572:45:75;;;902:22000:47;;;;;;;;;;-1:-1:-1;902:22000:47;;;-1:-1:-1;;902:22000:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;902:22000:47;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;902:22000:47;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;902:22000:47;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;902:22000:47;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;902:22000:47;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;2736:37:54:-;;;;;;;;;-1:-1:-1;2736:37:54;;;;;;;;;-1:-1:-1;2736:37:54;;;;;;;;902:22000:47;;;;;;2736:37:54;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;902:22000:47;;;2736:37:54;;;-1:-1:-1;;;2736:37:54;;;;;;;;;;;;:::i;:::-;;;;902:22000:47;;;;;;;;;;:::o;:::-;-1:-1:-1;;;902:22000:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2315:34:54:-;;902:22000:47;-1:-1:-1;;;;;902:22000:47;;;;;;2315:34:54:o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3697:1543:47:-;;;;;;;;;902:22000;4069:17;902:22000;4069:17;;-1:-1:-1;;;;;902:22000:47;;;;;;;;;4132:43;902:22000;4132:43;;;;;;;;;;;;;;;;;;;;;;;;3697:1543;4219:14;2315:34:54;4349:82:47;4219:14;;;;;;2315:34:54;;4219:14:47;;;;;;;;:27;:14;4185:110;4219:14;;:::i;:::-;:27;:::i;4185:110::-;902:22000;4349:82;;;;;;;902:22000;4349:82;;902:22000;4132:43;4349:82;;902:22000;2315:34:54;;;;;;;;;;:::i;:::-;902:22000:47;;2315:34:54;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4349:82:47;;;;;;;;;;902:22000;;;;;;4349:82;;;3697:1543;4306:125;;;;;;;;4448:4;;;902:22000;4469:14;:27;:14;;;;;:::i;:27::-;4442:57;;;;;902:22000;;4132:43;902:22000;;4442:57;;;;-1:-1:-1;;;4442:57:47;;;;;;;;;;3697:1543;4514:12;;;4510:620;;5154:10;;;;;;;;;;;;;;:::i;:::-;5175:58;;;;3697:1543;:::o;4510:620::-;4568:3;;;;;;;;;;4601:16;4568:3;;;;;;;;;;;4601:16;4568:3;;;:::i;4601:16::-;;:::i;:::-;4798:8;4644:25;;21945:120;4644:25;;;;;;:::i;21945:120::-;4798:8;;:::i;:::-;902:22000;;;4821:44;;;;;902:22000;;-1:-1:-1;;;4821:44:47;;-1:-1:-1;;;;;902:22000:47;;4132:43;4821:44;;902:22000;2315:34:54;;;902:22000:47;;;;;;;;;2315:34:54;;902:22000:47;;;;4821:44;;;;;;;;;;;;;;;;;4510:620;902:22000;;;4920:9;902:22000;5054:24;902:22000;;5015:21;902:22000;;;4920:9;:::i;5015:21::-;5054:24;;:::i;:::-;4944:175;;;;;;:::o;4821:44::-;;;;;;;;;;:::i;:::-;902:22000;;4821:44;;;;;;;;4442:57;;;;;;;:::i;:::-;;;;;;;902:22000;;;;;;;;;4349:82;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2315:34:54;;;;;;;:::i;:::-;;;4132:43:47;2315:34:54;;;:::i;:::-;;;;;;902:22000:47;2315:34:54;;902:22000:47;4349:82;;;;;;;;;;;-1:-1:-1;4349:82:47;;;902:22000;;;;;;;;;;;4132:43;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000;;;;;;;;;;;;4132:43;;;;;-1:-1:-1;4132:43:47;;;902:22000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;902:22000:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2534:327::-;902:22000;-1:-1:-1;;;;;2534:327:47;;;;2690:48;902:22000;;2690:48;;;;-1:-1:-1;;;2690:48:47;;902:22000;2690:48;;;;;;2748:106;2690:48;2776:34;2690:48;;;;;;;2534:327;902:22000;;;;2777:20;902:22000;;2777:20;;:::i;2776:34::-;-1:-1:-1;2769:41:47;902:22000;;:::i;2748:106::-;2534:327::o;2690:48::-;902:22000;2690:48;;2777:20;2690:48;;;;902:22000;2690:48;902:22000;2690:48;;;;;;;;;:::i;:::-;;;;;;;;;;902:22000;;;2690:48;902:22000;;;;;2961:114;3064:3;2961:114;-1:-1:-1;;;;;3056:5:47;;902:22000;3024:4;;902:22000;3064:3;:::i;902:22000::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;880:621:75:-;;;1081:12;;;:29;;;880:621;1081:47;;;880:621;902:22000:47;;;1334:16:75;1202:20;;;;:::i;:::-;1334:16;;;:::i;:::-;-1:-1:-1;;2315:34:54;;;;;;;;1333:37:75;;;:::i;:::-;1389:26;;;902:22000:47;;;1468:26:75;;;:::i;:::-;880:621;:::o;902:22000:47:-;;;;-1:-1:-1;;;902:22000:47;;;;;;;;;;;2736:37:54;902:22000:47;2736:37:54;;;902:22000:47;;;;;;-1:-1:-1;;;902:22000:47;;;;;;;;;;;2736:37:54;902:22000:47;2736:37:54;;;902:22000:47;;1081:47:75;1114:14;;;;1081:47;;:29;1097:13;;;;1081:29;;1905:487;2225:22;1905:487;2279:17;1905:487;;2084:106;902:22000:47;;;;;:::i;:::-;;;;;;;;;;;;;;2105:23:75;;;;2084:106;:::i;:::-;2225:22;:::i;:::-;2279:17;;;:::i;:::-;-1:-1:-1;;2315:34:54;;;;;;;2338:21:75;2278:39;;;;:::i;5876:209::-;-1:-1:-1;;;;;902:22000:47;;;6037:41:75;902:22000:47;;6037:41:75;;;;902:22000:47;6037:41:75;;902:22000:47;6037:41:75;;;;;;;;;;;;;5876:209;6008:70;;;5876:209;:::o;6037:41::-;;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;;;;;;;;6037:41:75;;;;;;;;;;902:22000:47;;;6037:41:75;902:22000:47;;;;;6260:111:75;6337:27;-1:-1:-1;;;;;6260:111:75;6337:27;902:22000:47;;6337:27:75;;;;902:22000:47;6337:27:75;;902:22000:47;6337:27:75;;;;;;;;;;;6333:31;6260:111;:::o;6337:27::-;;;;;;;;;;;;;;;;:::i;:::-;;;902:22000:47;;;;;;6260:111:75;:::o;6337:27::-;;;-1:-1:-1;6337:27:75;;902:22000:47;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;902:22000:47;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;789:399:76:-;902:22000:47;;997:24:76;974:60;;;;;;-1:-1:-1;;;;;902:22000:47;;;974:60:76;;;902:22000:47;2315:34:54;;;;902:22000:47;;;;974:60:76;;;1054:127;;-1:-1:-1;;;;942:102:76;-1:-1:-1;;902:22000:47;974:60:76;2315:34:54;902:22000:47;974:60:76;:::i;:::-;942:102;902:22000:47;;942:102:76;;;;:::i;:::-;1075:57;;;789:399;902:22000:47;;;;;;;:::i;:::-;;;;;974:60:76;902:22000:47;;;1054:127:76;:::i;1075:57::-;2736:37:54;;1087:16:76;;;-1:-1:-1;1087:44:76;;;;1075:57;;;;;;1087:44;1107:24;;;974:60;1107:24;;;;;;;;:::i;:::-;1087:44;;;;1590:195;1681:46;1590:195;;1737:41;1590:195;-1:-1:-1;;;;;1590:195:76;;902:22000:47;1718:4:76;1681:46;;;:::i;:::-;;902:22000:47;;;;;;:::i;:::-;;;;;;;;;1737:41:76;:::i;2207:514::-;;;;902:22000:47;;2413:148:76;;;;;2453:28;2413:148;;-1:-1:-1;;;;;902:22000:47;;;;;2413:148:76;;;902:22000:47;;;;;;;;;;;2413:148:76;;902:22000:47;;;;;;;;;;;;;-1:-1:-1;902:22000:47;;;;2582:132:76;902:22000:47;;;2381:190:76;902:22000:47;;2381:190:76;;;;:::i;:::-;2603:57;;;2207:514;902:22000:47;;;;;;;:::i;:::-;;;;;2413:148:76;902:22000:47;;;2582:132:76;:::i;2603:57::-;2736:37:54;;2615:16:76;;;-1:-1:-1;2615:44:76;;;;2603:57;;;;;;2615:44;2635:24;;;2413:148;2635:24;;;;;;;;:::i;:::-;2615:44;;;",
    "linkReferences": {},
    "immutableReferences": {
      "54481": [
        {
          "start": 39,
          "length": 32
        },
        {
          "start": 776,
          "length": 32
        },
        {
          "start": 2360,
          "length": 32
        },
        {
          "start": 3406,
          "length": 32
        },
        {
          "start": 3691,
          "length": 32
        },
        {
          "start": 4191,
          "length": 32
        },
        {
          "start": 5187,
          "length": 32
        },
        {
          "start": 5667,
          "length": 32
        },
        {
          "start": 7231,
          "length": 32
        },
        {
          "start": 8098,
          "length": 32
        }
      ],
      "54485": [
        {
          "start": 1192,
          "length": 32
        },
        {
          "start": 8063,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WNAD()": "577898da",
    "buy(uint256,uint256,address,address,uint256)": "526cc7a7",
    "buyAmountOutMin(uint256,uint256,uint256,address,address,uint256)": "3bd7042d",
    "buyExactAmountOut(uint256,uint256,address,address,uint256)": "19a5049f",
    "createCurve(address,string,string,string,uint256,uint256)": "02a57915",
    "factory()": "c45a0155",
    "getAmountIn(uint256,uint256,uint256,uint256)": "571fd012",
    "getAmountOut(uint256,uint256,uint256,uint256)": "52707d8c",
    "getCurveData(address)": "f98355e4",
    "getCurveData(address,address)": "61babc76",
    "getFeeVault()": "ec0f7cf0",
    "initialize(address)": "c4d66de8",
    "sell(uint256,address,address,uint256)": "e548cedd",
    "sellAmountOutMin(uint256,uint256,address,address,uint256)": "feb20030",
    "sellAmountOutMinWithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": "2a7f6367",
    "sellExactAmountOut(uint256,uint256,address,address,uint256)": "849f72ce",
    "sellExactAmountOutwithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": "663a313e",
    "sellPermit(uint256,address,address,address,uint256,uint8,bytes32,bytes32)": "34d8f707",
    "vault()": "fbfa77cf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNAD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WNAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyAmountOutMin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyExactAmountOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"createCurve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"curve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"virtualNad\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"virtualToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCurveData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"curve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"virtualNad\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"virtualToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curve\",\"type\":\"address\"}],\"name\":\"getCurveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"virtualNad\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"virtualToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"sellAmountOutMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"sellAmountOutMinWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"sellExactAmountOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"sellExactAmountOutwithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"sellPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Handles creation of bonding curves, buying and selling operations with various payment methods\",\"kind\":\"dev\",\"methods\":{\"buy(uint256,uint256,address,address,uint256)\":{\"params\":{\"amountIn\":\"NAD amount to spend\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"fee\":\"Fee amount for the transaction\",\"to\":\"Address to receive the bought tokens\",\"token\":\"Address of the token to buy\"}},\"buyAmountOutMin(uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"amountIn\":\"NAD amount to spend\",\"amountOutMin\":\"Minimum amount of tokens to receive\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"fee\":\"Fee amount for the transaction\",\"to\":\"Address to receive the bought tokens\",\"token\":\"Address of the token to buy\"}},\"buyExactAmountOut(uint256,uint256,address,address,uint256)\":{\"params\":{\"amountInMax\":\"Maximum NAD amount to spend\",\"amountOut\":\"Amount of tokens to buy\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"to\":\"Address to receive the bought tokens\",\"token\":\"Address of the token to buy\"}},\"constructor\":{\"params\":{\"_WNAD\":\"Address of the wrapped NAD token\",\"_vault\":\"Address of the fee collection vault\"}},\"createCurve(address,string,string,string,uint256,uint256)\":{\"params\":{\"amountIn\":\"Initial NAD amount\",\"creator\":\"Address of the curve creator\",\"fee\":\"Fee amount for the creation\",\"name\":\"Name of the token\",\"symbol\":\"Symbol of the token\",\"tokenURI\":\"URI for token metadata\"},\"returns\":{\"amountOut\":\"Amount of tokens received\",\"curve\":\"Address of the created bonding curve\",\"token\":\"Address of the created token\",\"virtualNad\":\"Initial virtual NAD reserve\",\"virtualToken\":\"Initial virtual token reserve\"}},\"getAmountIn(uint256,uint256,uint256,uint256)\":{\"params\":{\"amountOut\":\"Desired output amount\",\"k\":\"Constant product value\",\"reserveIn\":\"Input reserve\",\"reserveOut\":\"Output reserve\"},\"returns\":{\"amountIn\":\"Required input amount\"}},\"getAmountOut(uint256,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Input amount\",\"k\":\"Constant product value\",\"reserveIn\":\"Input reserve\",\"reserveOut\":\"Output reserve\"},\"returns\":{\"amountOut\":\"Calculated output amount\"}},\"getCurveData(address)\":{\"params\":{\"curve\":\"Bonding curve address\"},\"returns\":{\"k\":\"Constant product value\",\"virtualNad\":\"Virtual NAD reserve\",\"virtualToken\":\"Virtual token reserve\"}},\"getCurveData(address,address)\":{\"params\":{\"_factory\":\"Factory contract address\",\"token\":\"Token address\"},\"returns\":{\"curve\":\"Bonding curve address\",\"k\":\"Constant product value\",\"virtualNad\":\"Virtual NAD reserve\",\"virtualToken\":\"Virtual token reserve\"}},\"getFeeVault()\":{\"returns\":{\"_0\":\"Address of the vault\"}},\"sell(uint256,address,address,uint256)\":{\"params\":{\"amountIn\":\"Token amount to sell\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\"}},\"sellAmountOutMin(uint256,uint256,address,address,uint256)\":{\"params\":{\"amountIn\":\"Token amount to sell\",\"amountOutMin\":\"Minimum amount of NAD to receive\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\"}},\"sellAmountOutMinWithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amountIn\":\"Token amount to sell\",\"amountOutMin\":\"Minimum amount of NAD to receive\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"from\":\"Address of the token owner\",\"r\":\"r parameter of the permit signature\",\"s\":\"s parameter of the permit signature\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\",\"v\":\"v parameter of the permit signature\"}},\"sellExactAmountOut(uint256,uint256,address,address,uint256)\":{\"params\":{\"amountInMax\":\"Maximum token amount to sell\",\"amountOut\":\"Amount of NAD to receive\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\"}},\"sellExactAmountOutwithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amountInMax\":\"Maximum token amount to sell\",\"amountOut\":\"Amount of NAD to receive\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"from\":\"Address of the token owner\",\"r\":\"r parameter of the permit signature\",\"s\":\"s parameter of the permit signature\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\",\"v\":\"v parameter of the permit signature\"}},\"sellPermit(uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amountIn\":\"Token amount to sell\",\"deadline\":\"Timestamp before which the transaction must be executed\",\"from\":\"Address of the token owner\",\"r\":\"r parameter of the permit signature\",\"s\":\"s parameter of the permit signature\",\"to\":\"Address to receive the sold tokens\",\"token\":\"Address of the token to sell\",\"v\":\"v parameter of the permit signature\"}}},\"title\":\"Core\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"WNAD()\":{\"notice\":\"Address of the wrapped NAD token\"},\"buy(uint256,uint256,address,address,uint256)\":{\"notice\":\"Buys tokens from a bonding curve\"},\"buyAmountOutMin(uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Buys tokens from a bonding curve with a minimum amount out\"},\"buyExactAmountOut(uint256,uint256,address,address,uint256)\":{\"notice\":\"Buys an exact amount of tokens from a bonding curve\"},\"constructor\":{\"notice\":\"Constructor initializes core contract with essential addresses\"},\"createCurve(address,string,string,string,uint256,uint256)\":{\"notice\":\"Creates a new bonding curve with initial liquidity\"},\"factory()\":{\"notice\":\"Address of the bonding curve factory contract\"},\"getAmountIn(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the input amount required for a desired output\"},\"getAmountOut(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the output amount for a given input\"},\"getCurveData(address)\":{\"notice\":\"Gets curve data directly from a curve contract\"},\"getCurveData(address,address)\":{\"notice\":\"Gets curve data from the factory\"},\"getFeeVault()\":{\"notice\":\"Gets the address of the fee collection vault\"},\"sell(uint256,address,address,uint256)\":{\"notice\":\"Sells tokens to a bonding curve\"},\"sellAmountOutMin(uint256,uint256,address,address,uint256)\":{\"notice\":\"Sells tokens to a bonding curve with a minimum amount out\"},\"sellAmountOutMinWithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Sells tokens to a bonding curve with permit and a minimum amount out\"},\"sellExactAmountOut(uint256,uint256,address,address,uint256)\":{\"notice\":\"Sells an exact amount of tokens to a bonding curve\"},\"sellExactAmountOutwithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Sells an exact amount of tokens to a bonding curve with permit\"},\"sellPermit(uint256,address,address,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Sells tokens to a bonding curve with permit\"},\"vault()\":{\"notice\":\"ERC4626 vault contract for fee collection\"}},\"notice\":\"Core contract for managing bonding curve operations and NAD token interactions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Core.sol\":\"Core\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"src/Core.sol\":{\"keccak256\":\"0x634e789aea061d424dddd15bb33236cb206103aa30e71c94f7253cc6e3d7499f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8bffc2ea12f56389445321c2148812f7f744b3e3ee87395345ea82d04a082315\",\"dweb:/ipfs/QmNpwDofwotCm6Vbi3oHEHVoYLRnGv46ShjDvB3SbYLNds\"]},\"src/errors/Errors.sol\":{\"keccak256\":\"0x0d0c8d8bb2843a4fb3c31bbf58342fc214f1c0a4e6a98d540e67a495bc1890db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://47beff1a9bd96d96eb89e8a6a8502e9b5793092b703ed1f3348c11a81230c32a\",\"dweb:/ipfs/QmZoZzmNunwu7vMoMdk2CATky56f4xQNa2u5Me9ghw92an\"]},\"src/errors/errors.sol\":{\"keccak256\":\"0x0d0c8d8bb2843a4fb3c31bbf58342fc214f1c0a4e6a98d540e67a495bc1890db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://47beff1a9bd96d96eb89e8a6a8502e9b5793092b703ed1f3348c11a81230c32a\",\"dweb:/ipfs/QmZoZzmNunwu7vMoMdk2CATky56f4xQNa2u5Me9ghw92an\"]},\"src/interfaces/IBondingCurve.sol\":{\"keccak256\":\"0x344ef492bdfaec12b6fe371429f57e8e38f56664d6b1cb62824af57d356b852f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7858da2b610a221d614941db7c02d29a26b0cf56955ddef41b03a9b9ab793193\",\"dweb:/ipfs/QmZoZu5wgwD7rB9ciMejM9riePFAva9X86VWuxpcZJRWQM\"]},\"src/interfaces/IBondingCurveFactory.sol\":{\"keccak256\":\"0xe6ecac7f8df8bd0cf1a1db99926f6507311e9aff0941f09f8bb7174e96563391\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9dedf7b09f6df6a82a9255f2a85ee6b6afa702491c283be018c7a2da8a44fde\",\"dweb:/ipfs/QmTyy4apGahQHAya7H77DfvQRhncZTUFGjkcq9xsAdDUJA\"]},\"src/interfaces/ICore.sol\":{\"keccak256\":\"0x106c5b0d093adc6277b59e4587d31fe71bea5160304ea43211011e3ff291e85a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa72659a894e740e5170ab0db3e8289af51d7709ef11b179a768c6330aeddaf\",\"dweb:/ipfs/QmeE4uqZrz5DFCVfko4JSxmbqwF1pDrxVeouwLLEpKwWJr\"]},\"src/interfaces/IWNAD.sol\":{\"keccak256\":\"0xf0b40b37b0cdb3ad13751cd43512914770ee581ee8fcad862fb710a7bbebf1c7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4f812fb62c08f07958efcaa7d06f850e2600d2edc6f955fa336394d413fff47\",\"dweb:/ipfs/QmWK2z9M5VPmtsHWuEQvh4mbejau7fNCHUyeLbPFNUFztJ\"]},\"src/utils/NadFunLibrary.sol\":{\"keccak256\":\"0xbbba3041e48ada52e70bcef44814aa25937ab78fb6d6e80a687efdff23305ba2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f1348a2af8d451795d1d7dd407b63e62ac17b1834ebe454d2dc58fe1e6addab1\",\"dweb:/ipfs/QmQSbeQBNQiC4cCsRi7EhM3mVLqJq7NpAEZfhbMKU89wnj\"]},\"src/utils/TransferHelper.sol\":{\"keccak256\":\"0x3ef4bfe360df9c61e98ec14144465a6747e7e34e811146263fc8404008090032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c859a9d2902cb6e025640c67c18bd3c5ca829a70631a45972b4f74590840cc15\",\"dweb:/ipfs/QmdeDtDyPeYJb6aWwwa26yssfhvpaJTFNNCvbGPV431cgV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_WNAD",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WNAD",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyAmountOutMin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMax",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyExactAmountOut"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createCurve",
          "outputs": [
            {
              "internalType": "address",
              "name": "curve",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "virtualNad",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "virtualToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "k",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getAmountIn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "k",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getAmountOut",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurveData",
          "outputs": [
            {
              "internalType": "address",
              "name": "curve",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "virtualNad",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "virtualToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "k",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "curve",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurveData",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "virtualNad",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "virtualToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "k",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sell"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sellAmountOutMin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sellAmountOutMinWithPermit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMax",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellExactAmountOut"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMax",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellExactAmountOutwithPermit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sellPermit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract IERC4626",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buy(uint256,uint256,address,address,uint256)": {
            "params": {
              "amountIn": "NAD amount to spend",
              "deadline": "Timestamp before which the transaction must be executed",
              "fee": "Fee amount for the transaction",
              "to": "Address to receive the bought tokens",
              "token": "Address of the token to buy"
            }
          },
          "buyAmountOutMin(uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "amountIn": "NAD amount to spend",
              "amountOutMin": "Minimum amount of tokens to receive",
              "deadline": "Timestamp before which the transaction must be executed",
              "fee": "Fee amount for the transaction",
              "to": "Address to receive the bought tokens",
              "token": "Address of the token to buy"
            }
          },
          "buyExactAmountOut(uint256,uint256,address,address,uint256)": {
            "params": {
              "amountInMax": "Maximum NAD amount to spend",
              "amountOut": "Amount of tokens to buy",
              "deadline": "Timestamp before which the transaction must be executed",
              "to": "Address to receive the bought tokens",
              "token": "Address of the token to buy"
            }
          },
          "constructor": {
            "params": {
              "_WNAD": "Address of the wrapped NAD token",
              "_vault": "Address of the fee collection vault"
            }
          },
          "createCurve(address,string,string,string,uint256,uint256)": {
            "params": {
              "amountIn": "Initial NAD amount",
              "creator": "Address of the curve creator",
              "fee": "Fee amount for the creation",
              "name": "Name of the token",
              "symbol": "Symbol of the token",
              "tokenURI": "URI for token metadata"
            },
            "returns": {
              "amountOut": "Amount of tokens received",
              "curve": "Address of the created bonding curve",
              "token": "Address of the created token",
              "virtualNad": "Initial virtual NAD reserve",
              "virtualToken": "Initial virtual token reserve"
            }
          },
          "getAmountIn(uint256,uint256,uint256,uint256)": {
            "params": {
              "amountOut": "Desired output amount",
              "k": "Constant product value",
              "reserveIn": "Input reserve",
              "reserveOut": "Output reserve"
            },
            "returns": {
              "amountIn": "Required input amount"
            }
          },
          "getAmountOut(uint256,uint256,uint256,uint256)": {
            "params": {
              "amountIn": "Input amount",
              "k": "Constant product value",
              "reserveIn": "Input reserve",
              "reserveOut": "Output reserve"
            },
            "returns": {
              "amountOut": "Calculated output amount"
            }
          },
          "getCurveData(address)": {
            "params": {
              "curve": "Bonding curve address"
            },
            "returns": {
              "k": "Constant product value",
              "virtualNad": "Virtual NAD reserve",
              "virtualToken": "Virtual token reserve"
            }
          },
          "getCurveData(address,address)": {
            "params": {
              "_factory": "Factory contract address",
              "token": "Token address"
            },
            "returns": {
              "curve": "Bonding curve address",
              "k": "Constant product value",
              "virtualNad": "Virtual NAD reserve",
              "virtualToken": "Virtual token reserve"
            }
          },
          "getFeeVault()": {
            "returns": {
              "_0": "Address of the vault"
            }
          },
          "sell(uint256,address,address,uint256)": {
            "params": {
              "amountIn": "Token amount to sell",
              "deadline": "Timestamp before which the transaction must be executed",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell"
            }
          },
          "sellAmountOutMin(uint256,uint256,address,address,uint256)": {
            "params": {
              "amountIn": "Token amount to sell",
              "amountOutMin": "Minimum amount of NAD to receive",
              "deadline": "Timestamp before which the transaction must be executed",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell"
            }
          },
          "sellAmountOutMinWithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "params": {
              "amountIn": "Token amount to sell",
              "amountOutMin": "Minimum amount of NAD to receive",
              "deadline": "Timestamp before which the transaction must be executed",
              "from": "Address of the token owner",
              "r": "r parameter of the permit signature",
              "s": "s parameter of the permit signature",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell",
              "v": "v parameter of the permit signature"
            }
          },
          "sellExactAmountOut(uint256,uint256,address,address,uint256)": {
            "params": {
              "amountInMax": "Maximum token amount to sell",
              "amountOut": "Amount of NAD to receive",
              "deadline": "Timestamp before which the transaction must be executed",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell"
            }
          },
          "sellExactAmountOutwithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "params": {
              "amountInMax": "Maximum token amount to sell",
              "amountOut": "Amount of NAD to receive",
              "deadline": "Timestamp before which the transaction must be executed",
              "from": "Address of the token owner",
              "r": "r parameter of the permit signature",
              "s": "s parameter of the permit signature",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell",
              "v": "v parameter of the permit signature"
            }
          },
          "sellPermit(uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "params": {
              "amountIn": "Token amount to sell",
              "deadline": "Timestamp before which the transaction must be executed",
              "from": "Address of the token owner",
              "r": "r parameter of the permit signature",
              "s": "s parameter of the permit signature",
              "to": "Address to receive the sold tokens",
              "token": "Address of the token to sell",
              "v": "v parameter of the permit signature"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "WNAD()": {
            "notice": "Address of the wrapped NAD token"
          },
          "buy(uint256,uint256,address,address,uint256)": {
            "notice": "Buys tokens from a bonding curve"
          },
          "buyAmountOutMin(uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Buys tokens from a bonding curve with a minimum amount out"
          },
          "buyExactAmountOut(uint256,uint256,address,address,uint256)": {
            "notice": "Buys an exact amount of tokens from a bonding curve"
          },
          "constructor": {
            "notice": "Constructor initializes core contract with essential addresses"
          },
          "createCurve(address,string,string,string,uint256,uint256)": {
            "notice": "Creates a new bonding curve with initial liquidity"
          },
          "factory()": {
            "notice": "Address of the bonding curve factory contract"
          },
          "getAmountIn(uint256,uint256,uint256,uint256)": {
            "notice": "Calculates the input amount required for a desired output"
          },
          "getAmountOut(uint256,uint256,uint256,uint256)": {
            "notice": "Calculates the output amount for a given input"
          },
          "getCurveData(address)": {
            "notice": "Gets curve data directly from a curve contract"
          },
          "getCurveData(address,address)": {
            "notice": "Gets curve data from the factory"
          },
          "getFeeVault()": {
            "notice": "Gets the address of the fee collection vault"
          },
          "sell(uint256,address,address,uint256)": {
            "notice": "Sells tokens to a bonding curve"
          },
          "sellAmountOutMin(uint256,uint256,address,address,uint256)": {
            "notice": "Sells tokens to a bonding curve with a minimum amount out"
          },
          "sellAmountOutMinWithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "notice": "Sells tokens to a bonding curve with permit and a minimum amount out"
          },
          "sellExactAmountOut(uint256,uint256,address,address,uint256)": {
            "notice": "Sells an exact amount of tokens to a bonding curve"
          },
          "sellExactAmountOutwithPermit(uint256,uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "notice": "Sells an exact amount of tokens to a bonding curve with permit"
          },
          "sellPermit(uint256,address,address,address,uint256,uint8,bytes32,bytes32)": {
            "notice": "Sells tokens to a bonding curve with permit"
          },
          "vault()": {
            "notice": "ERC4626 vault contract for fee collection"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Core.sol": "Core"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17",
        "urls": [
          "bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1",
          "dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6",
        "urls": [
          "bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3",
          "dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"
        ],
        "license": "MIT"
      },
      "src/Core.sol": {
        "keccak256": "0x634e789aea061d424dddd15bb33236cb206103aa30e71c94f7253cc6e3d7499f",
        "urls": [
          "bzz-raw://8bffc2ea12f56389445321c2148812f7f744b3e3ee87395345ea82d04a082315",
          "dweb:/ipfs/QmNpwDofwotCm6Vbi3oHEHVoYLRnGv46ShjDvB3SbYLNds"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/errors/Errors.sol": {
        "keccak256": "0x0d0c8d8bb2843a4fb3c31bbf58342fc214f1c0a4e6a98d540e67a495bc1890db",
        "urls": [
          "bzz-raw://47beff1a9bd96d96eb89e8a6a8502e9b5793092b703ed1f3348c11a81230c32a",
          "dweb:/ipfs/QmZoZzmNunwu7vMoMdk2CATky56f4xQNa2u5Me9ghw92an"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/errors/errors.sol": {
        "keccak256": "0x0d0c8d8bb2843a4fb3c31bbf58342fc214f1c0a4e6a98d540e67a495bc1890db",
        "urls": [
          "bzz-raw://47beff1a9bd96d96eb89e8a6a8502e9b5793092b703ed1f3348c11a81230c32a",
          "dweb:/ipfs/QmZoZzmNunwu7vMoMdk2CATky56f4xQNa2u5Me9ghw92an"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IBondingCurve.sol": {
        "keccak256": "0x344ef492bdfaec12b6fe371429f57e8e38f56664d6b1cb62824af57d356b852f",
        "urls": [
          "bzz-raw://7858da2b610a221d614941db7c02d29a26b0cf56955ddef41b03a9b9ab793193",
          "dweb:/ipfs/QmZoZu5wgwD7rB9ciMejM9riePFAva9X86VWuxpcZJRWQM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IBondingCurveFactory.sol": {
        "keccak256": "0xe6ecac7f8df8bd0cf1a1db99926f6507311e9aff0941f09f8bb7174e96563391",
        "urls": [
          "bzz-raw://b9dedf7b09f6df6a82a9255f2a85ee6b6afa702491c283be018c7a2da8a44fde",
          "dweb:/ipfs/QmTyy4apGahQHAya7H77DfvQRhncZTUFGjkcq9xsAdDUJA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/ICore.sol": {
        "keccak256": "0x106c5b0d093adc6277b59e4587d31fe71bea5160304ea43211011e3ff291e85a",
        "urls": [
          "bzz-raw://1fa72659a894e740e5170ab0db3e8289af51d7709ef11b179a768c6330aeddaf",
          "dweb:/ipfs/QmeE4uqZrz5DFCVfko4JSxmbqwF1pDrxVeouwLLEpKwWJr"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWNAD.sol": {
        "keccak256": "0xf0b40b37b0cdb3ad13751cd43512914770ee581ee8fcad862fb710a7bbebf1c7",
        "urls": [
          "bzz-raw://a4f812fb62c08f07958efcaa7d06f850e2600d2edc6f955fa336394d413fff47",
          "dweb:/ipfs/QmWK2z9M5VPmtsHWuEQvh4mbejau7fNCHUyeLbPFNUFztJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/utils/NadFunLibrary.sol": {
        "keccak256": "0xbbba3041e48ada52e70bcef44814aa25937ab78fb6d6e80a687efdff23305ba2",
        "urls": [
          "bzz-raw://f1348a2af8d451795d1d7dd407b63e62ac17b1834ebe454d2dc58fe1e6addab1",
          "dweb:/ipfs/QmQSbeQBNQiC4cCsRi7EhM3mVLqJq7NpAEZfhbMKU89wnj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/utils/TransferHelper.sol": {
        "keccak256": "0x3ef4bfe360df9c61e98ec14144465a6747e7e34e811146263fc8404008090032",
        "urls": [
          "bzz-raw://c859a9d2902cb6e025640c67c18bd3c5ca829a70631a45972b4f74590840cc15",
          "dweb:/ipfs/QmdeDtDyPeYJb6aWwwa26yssfhvpaJTFNNCvbGPV431cgV"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "id": 47
}
